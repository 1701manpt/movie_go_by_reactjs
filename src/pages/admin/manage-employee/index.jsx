// reactjs

// nextjs
import Head from 'next/head'
import Link from 'next/link'
import { useEffect } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import Authentication from '~/components/authentication/admin'
import Button from '~/components/button'
import Section, { SectionContent, SectionTitle } from '~/components/section'
import Table, {
    Cell,
    EmployeeItem,
    fieldEmployee,
    Row,
    TableBody,
    TableHeader,
} from '~/components/table'
import useAxiosPrivate from '~/hooks/useAxiosPrivate'

// components

// layouts
import Layout from '~/layouts/admin'
import { getAll } from '~/redux/callApi/employee'

// redux

export default function ManageCustomer() {
    const dispatch = useDispatch()
    const axiosPrivate = useAxiosPrivate()
    const user = useSelector((state) => state.auth.login.currentUser)
    const loading = useSelector((state) => state.employee.list?.loading)
    const list = useSelector((state) => state.employee.list?.data)

    useEffect(() => {
        dispatch(getAll({ user, axiosPrivate }))
    }, [dispatch, user, axiosPrivate])

    return (
        <Authentication>
            <Head>
                <title>Quản lý nhân viên | Store Online</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' href='/icon-manage-employee.png' />
            </Head>
            <Layout>
                <Section>
                    <SectionContent>
                        <Link href='/admin/manage-employee/add'>
                            <Button>Thêm nhân viên mới</Button>
                        </Link>
                    </SectionContent>
                </Section>
                <Section>
                    <SectionTitle>Danh sách nhân viên</SectionTitle>
                    <SectionContent>
                        <Table>
                            <TableHeader data={fieldEmployee} />
                            <TableBody>
                                {loading ? (
                                    <Row>
                                        <Cell
                                            colSpan={Number(
                                                fieldEmployee.length + 4,
                                            )}
                                            center
                                        >
                                            loading....
                                        </Cell>
                                    </Row>
                                ) : list?.length <= 0 ? (
                                    <Row>
                                        <Cell
                                            colSpan={Number(
                                                fieldEmployee.length + 4,
                                            )}
                                            center
                                        >
                                            Không có dữ liệu
                                        </Cell>
                                    </Row>
                                ) : (
                                    list?.map((product, i) => {
                                        return (
                                            <EmployeeItem
                                                data={product}
                                                key={i}
                                                index={i}
                                            />
                                        )
                                    })
                                )}
                            </TableBody>
                        </Table>
                    </SectionContent>
                </Section>
            </Layout>
        </Authentication>
    )
}
